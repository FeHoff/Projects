
clear all
addpath(genpath('/gs/project/gsf-624-aa/quarantaine/niak-boss-0.13.4/'))

addpath(genpath('/gs/project/gsf-624-aa/quarantaine/niak_dev_git/extensions/surfstab/'))

in_path = '/gs/project/gsf-624-aa/database2/preventad/rsn_preprocess_20150831/fmri/';
part_path = '/gs/project/gsf-624-aa/database2/preventad/templates/template_cambridge_basc_multiscale_sym_scale012.mnc.gz';
out_path = '/gs/project/gsf-624-aa/database2/preventad/results/pad_scores_s012_20160121_2/'; % s12 s20 s36
file_template = 'fmri_s[0-9]*[A-Z]*_[A-Z]*BL00_rest[0-9]+.mnc';
files_include = {'BL00'};

files_reject = {'s125043',...
's141584',...
's156906',...
's211391',...
's225190',...
's227643',...
's276654',...
's293725',...
's302872',...
's376416',...
's407530',...
's410281',...
's413786',...
's424955',...
's436685',...
's498019',...
's505012',...
's527990',...
's529692',...
's530104',...
's534153',...
's557909',...
's558080',...
's574029',...
's612400',...
's653279',...
's655283',...
's667293',...
's672207',...
's746832',...
's781900',...
's814936',...
's827752',...
's848049',...
's859532',...
's902039',...
's917380',...
's966786',...
's976083'};




% Search for the files we need and build the structure
f = dir(in_path);
[~, path_name, ~] = niak_fileparts(in_path);
in_strings = {f.name};
in_strings = in_strings(3:end);
in_files.fmri = struct;

%
for f_id = 1:numel(in_strings)
    in_string = in_strings{f_id};
    tmp_path = [in_path filesep in_string];
    [start, stop] = regexp(in_string, file_template);
    if ~isempty(start) && ~isempty(stop)
        [~, fname, ~] = niak_fileparts(in_string(start:stop));
        % See if it is in the exclusion list
        get_it = 1;
        for rej_id = 1:length(files_reject)
            rej_name = files_reject{rej_id};
            if findstr(rej_name,fname)
                get_it = 0;
            else
            end
        end
        if get_it == 1
            sub_name = [path_name '_' fname];
            in_files.fmri.(fname) = [in_path filesep in_string];
            a = [in_path filesep in_string];
        else
            fprintf('We do not like subject %s\n',fname);
        end
    end
end
    


in_files.part = part_path;
opt.folder_out = out_path;
% Compute the number of matched files
fnames = fieldnames(in_files.fmri);
numf = length(fnames);
disp(sprintf('I found %d files in %s.\n', numf, in_path));
opt.psom.max_queued = 300;
opt.scores.flag_target = true;
opt.scores.flag_deal = true;
disp('Running the pipeline now.')
pipeline = niak_pipeline_stability_scores(in_files, opt);
